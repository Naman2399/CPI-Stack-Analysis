{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1tYx6R18nUgfBgZpFa15jYqoi3nwcNGgb","timestamp":1697179340494}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Uploading CSV File"],"metadata":{"id":"iniF_-9EZ-sE"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_-CIKf_hZoOd","executionInfo":{"status":"ok","timestamp":1697182398487,"user_tz":-330,"elapsed":26258,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"ecbe31c9-28a9-4f1a-defe-01cf84d794e9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["## Basic Dataframe Sample"],"metadata":{"id":"HtNIcNFXaSqg"}},{"cell_type":"code","source":["import pandas as pd\n","# Dataframe\n","file_id = \"/content/drive/MyDrive/Problem_2/gcc_500_final.log.csv\"\n","df = pd.read_csv(file_id)\n"],"metadata":{"id":"Rzb6wmWzaVIC","executionInfo":{"status":"ok","timestamp":1697182399602,"user_tz":-330,"elapsed":1117,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Display first 10 rows\n","result = df.head(10)\n","print(\"First 10 rows\")\n","result"],"metadata":{"id":"mRFzBWujbswY","colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"status":"ok","timestamp":1697182399603,"user_tz":-330,"elapsed":11,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"468fa9f8-ac1e-476e-c7cf-01b326abea30"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["First 10 rows\n"]},{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0      time     cycles  instructions  branch-misses  \\\n","0           0  0.200284  417059090     718926240        1816854   \n","1           1  0.400625  600429353    1264059741        1762581   \n","2           2  0.600957  596412738    1077894708        1878601   \n","3           3  0.801286  593417286    1034513464        2839667   \n","4           4  1.001625  593503862    1028350399        2805993   \n","5           5  1.201952  596149759    1108016981        2463953   \n","6           6  1.402275  593797921    1083176885        3874537   \n","7           7  1.602599  595878107    1129469395        3962533   \n","8           8  1.802938  594569548    1122511010        3943608   \n","9           9  2.003248  595521601    1187109750        3611985   \n","\n","   dTLB-load-misses  dTLB-store-misses  iTLB-load-misses  \\\n","0             40777              99279            273653   \n","1             46136              91010            644469   \n","2             67773              85017            709028   \n","3             78653              83785            749997   \n","4             77995              83919            684959   \n","5            100514             101920            532848   \n","6            122170             144708            128137   \n","7            114733             149183            139374   \n","8            130025             152761            140114   \n","9             91626             151219            135369   \n","\n","   L1-dcache-load-misses  L1-icache-load-misses  LLC-load-misses  \\\n","0                5348293               22260463           195023   \n","1                5937870               30576639            91351   \n","2               11949806               30938347           124317   \n","3                6926916               34402529           149794   \n","4                6508580               33476555           166360   \n","5                7550593               31238530           193042   \n","6               10946143               15374263           259401   \n","7               10315484               13895176           221322   \n","8               10246883               15586404           195241   \n","9               10761154               15104952           181869   \n","\n","   LLC-store-misses       cpi  \n","0            723346  0.580114  \n","1            649278  0.475001  \n","2            561381  0.553313  \n","3            583703  0.573620  \n","4            578311  0.577142  \n","5            596727  0.538033  \n","6            687922  0.548200  \n","7            798780  0.527573  \n","8            823426  0.529678  \n","9            805470  0.501657  "],"text/html":["\n","  <div id=\"df-18b994e5-df11-4d68-8631-a1005f4fe2eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>time</th>\n","      <th>cycles</th>\n","      <th>instructions</th>\n","      <th>branch-misses</th>\n","      <th>dTLB-load-misses</th>\n","      <th>dTLB-store-misses</th>\n","      <th>iTLB-load-misses</th>\n","      <th>L1-dcache-load-misses</th>\n","      <th>L1-icache-load-misses</th>\n","      <th>LLC-load-misses</th>\n","      <th>LLC-store-misses</th>\n","      <th>cpi</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.200284</td>\n","      <td>417059090</td>\n","      <td>718926240</td>\n","      <td>1816854</td>\n","      <td>40777</td>\n","      <td>99279</td>\n","      <td>273653</td>\n","      <td>5348293</td>\n","      <td>22260463</td>\n","      <td>195023</td>\n","      <td>723346</td>\n","      <td>0.580114</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.400625</td>\n","      <td>600429353</td>\n","      <td>1264059741</td>\n","      <td>1762581</td>\n","      <td>46136</td>\n","      <td>91010</td>\n","      <td>644469</td>\n","      <td>5937870</td>\n","      <td>30576639</td>\n","      <td>91351</td>\n","      <td>649278</td>\n","      <td>0.475001</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.600957</td>\n","      <td>596412738</td>\n","      <td>1077894708</td>\n","      <td>1878601</td>\n","      <td>67773</td>\n","      <td>85017</td>\n","      <td>709028</td>\n","      <td>11949806</td>\n","      <td>30938347</td>\n","      <td>124317</td>\n","      <td>561381</td>\n","      <td>0.553313</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.801286</td>\n","      <td>593417286</td>\n","      <td>1034513464</td>\n","      <td>2839667</td>\n","      <td>78653</td>\n","      <td>83785</td>\n","      <td>749997</td>\n","      <td>6926916</td>\n","      <td>34402529</td>\n","      <td>149794</td>\n","      <td>583703</td>\n","      <td>0.573620</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1.001625</td>\n","      <td>593503862</td>\n","      <td>1028350399</td>\n","      <td>2805993</td>\n","      <td>77995</td>\n","      <td>83919</td>\n","      <td>684959</td>\n","      <td>6508580</td>\n","      <td>33476555</td>\n","      <td>166360</td>\n","      <td>578311</td>\n","      <td>0.577142</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>1.201952</td>\n","      <td>596149759</td>\n","      <td>1108016981</td>\n","      <td>2463953</td>\n","      <td>100514</td>\n","      <td>101920</td>\n","      <td>532848</td>\n","      <td>7550593</td>\n","      <td>31238530</td>\n","      <td>193042</td>\n","      <td>596727</td>\n","      <td>0.538033</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>1.402275</td>\n","      <td>593797921</td>\n","      <td>1083176885</td>\n","      <td>3874537</td>\n","      <td>122170</td>\n","      <td>144708</td>\n","      <td>128137</td>\n","      <td>10946143</td>\n","      <td>15374263</td>\n","      <td>259401</td>\n","      <td>687922</td>\n","      <td>0.548200</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>1.602599</td>\n","      <td>595878107</td>\n","      <td>1129469395</td>\n","      <td>3962533</td>\n","      <td>114733</td>\n","      <td>149183</td>\n","      <td>139374</td>\n","      <td>10315484</td>\n","      <td>13895176</td>\n","      <td>221322</td>\n","      <td>798780</td>\n","      <td>0.527573</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>1.802938</td>\n","      <td>594569548</td>\n","      <td>1122511010</td>\n","      <td>3943608</td>\n","      <td>130025</td>\n","      <td>152761</td>\n","      <td>140114</td>\n","      <td>10246883</td>\n","      <td>15586404</td>\n","      <td>195241</td>\n","      <td>823426</td>\n","      <td>0.529678</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>2.003248</td>\n","      <td>595521601</td>\n","      <td>1187109750</td>\n","      <td>3611985</td>\n","      <td>91626</td>\n","      <td>151219</td>\n","      <td>135369</td>\n","      <td>10761154</td>\n","      <td>15104952</td>\n","      <td>181869</td>\n","      <td>805470</td>\n","      <td>0.501657</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18b994e5-df11-4d68-8631-a1005f4fe2eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-18b994e5-df11-4d68-8631-a1005f4fe2eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-18b994e5-df11-4d68-8631-a1005f4fe2eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8f4d1e8c-bf66-4934-81b1-071905fd3d2b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f4d1e8c-bf66-4934-81b1-071905fd3d2b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8f4d1e8c-bf66-4934-81b1-071905fd3d2b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Printing Column Values to Dataframe\n","for column in df.columns :\n","  print(\"Index : \", df.columns.get_loc(column) , \" - Column : \" , column)\n","\n","print(df.columns)"],"metadata":{"id":"KVdrGZZOb-7A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182399603,"user_tz":-330,"elapsed":8,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"6ccc0028-78fe-4f45-836a-bf82b0865535"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Index :  0  - Column :  Unnamed: 0\n","Index :  1  - Column :  time\n","Index :  2  - Column :  cycles\n","Index :  3  - Column :  instructions\n","Index :  4  - Column :  branch-misses\n","Index :  5  - Column :  dTLB-load-misses\n","Index :  6  - Column :  dTLB-store-misses\n","Index :  7  - Column :  iTLB-load-misses\n","Index :  8  - Column :  L1-dcache-load-misses\n","Index :  9  - Column :  L1-icache-load-misses\n","Index :  10  - Column :  LLC-load-misses\n","Index :  11  - Column :  LLC-store-misses\n","Index :  12  - Column :  cpi\n","Index(['Unnamed: 0', 'time', 'cycles', 'instructions', 'branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses', 'cpi'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["## Computing the Values of Column Name / Instructions"],"metadata":{"id":"26IPaON5OkYP"}},{"cell_type":"code","source":["columns = ['branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses']\n","\n","for column in columns :\n","  df[str(column) + '-' + 'instructions'] = df[column] / df['instructions']\n","\n","# Normalizing Data\n","for column in columns :\n","  column_name = str(column) + '-' + 'instructions'\n","  df[column_name + '-' + 'normalize'] = (df[column_name] - df[column_name].min()) / (df[column_name].max() - df[column_name].min())\n","\n","# Normalizing CPI\n","column_name = 'cpi'\n","df[column_name + '-' + 'normalize'] = (df[column_name] - df[column_name].min()) / (df[column_name].max() - df[column_name].min())\n","df"],"metadata":{"id":"-QW4KN6eOOzY","colab":{"base_uri":"https://localhost:8080/","height":495},"executionInfo":{"status":"ok","timestamp":1697182399603,"user_tz":-330,"elapsed":7,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"64f3b539-48e6-49c9-ae9b-b3f91e376407"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0       time      cycles  instructions  branch-misses  \\\n","0              0   0.200284   417059090     718926240        1816854   \n","1              1   0.400625   600429353    1264059741        1762581   \n","2              2   0.600957   596412738    1077894708        1878601   \n","3              3   0.801286   593417286    1034513464        2839667   \n","4              4   1.001625   593503862    1028350399        2805993   \n","...          ...        ...         ...           ...            ...   \n","1199         178  89.607223  1503234730    2800464893       11806135   \n","1200         179  90.107834  1499121731    2784078262       11760734   \n","1201         180  90.608438  1497387538    2493642429       14979657   \n","1202         181  91.109022  1496904987    2713209326       12998898   \n","1203         182  91.609614  1441094288    2957307247        6752328   \n","\n","      dTLB-load-misses  dTLB-store-misses  iTLB-load-misses  \\\n","0                40777              99279            273653   \n","1                46136              91010            644469   \n","2                67773              85017            709028   \n","3                78653              83785            749997   \n","4                77995              83919            684959   \n","...                ...                ...               ...   \n","1199            524510              86128             88352   \n","1200            421973             100185            148001   \n","1201            388037              94524            130718   \n","1202            415597              89888            124112   \n","1203            760261              81145             51511   \n","\n","      L1-dcache-load-misses  L1-icache-load-misses  ...  \\\n","0                   5348293               22260463  ...   \n","1                   5937870               30576639  ...   \n","2                  11949806               30938347  ...   \n","3                   6926916               34402529  ...   \n","4                   6508580               33476555  ...   \n","...                     ...                    ...  ...   \n","1199               44141556               16708256  ...   \n","1200               38642584               27690810  ...   \n","1201               34529062               25153091  ...   \n","1202               32831324               23691138  ...   \n","1203               46285705               11754018  ...   \n","\n","      LLC-store-misses-instructions  branch-misses-instructions-normalize  \\\n","0                          0.001006                              0.256023   \n","1                          0.000514                              0.113313   \n","2                          0.000521                              0.157213   \n","3                          0.000564                              0.283455   \n","4                          0.000562                              0.281403   \n","...                             ...                                   ...   \n","1199                       0.000140                              0.468753   \n","1200                       0.000147                              0.469824   \n","1201                       0.000163                              0.694428   \n","1202                       0.000156                              0.541215   \n","1203                       0.000147                              0.225295   \n","\n","      dTLB-load-misses-instructions-normalize  \\\n","0                                    0.019535   \n","1                                    0.012121   \n","2                                    0.021793   \n","3                                    0.026615   \n","4                                    0.026548   \n","...                                       ...   \n","1199                                 0.067410   \n","1200                                 0.054311   \n","1201                                 0.055794   \n","1202                                 0.054901   \n","1203                                 0.092997   \n","\n","      dTLB-store-misses-instructions-normalize  \\\n","0                                     0.386162   \n","1                                     0.201064   \n","2                                     0.220317   \n","3                                     0.226244   \n","4                                     0.227969   \n","...                                        ...   \n","1199                                  0.085563   \n","1200                                  0.100210   \n","1201                                  0.105589   \n","1202                                  0.092214   \n","1203                                  0.076276   \n","\n","      iTLB-load-misses-instructions-normalize  \\\n","0                                    0.524858   \n","1                                    0.703139   \n","2                                    0.907291   \n","3                                    1.000000   \n","4                                    0.918725   \n","...                                       ...   \n","1199                                 0.043152   \n","1200                                 0.072972   \n","1201                                 0.071952   \n","1202                                 0.062738   \n","1203                                 0.023653   \n","\n","      L1-dcache-load-misses-instructions-normalize  \\\n","0                                         0.095088   \n","1                                         0.046387   \n","2                                         0.159866   \n","3                                         0.081882   \n","4                                         0.075370   \n","...                                            ...   \n","1199                                      0.242921   \n","1200                                      0.209486   \n","1201                                      0.208900   \n","1202                                      0.177882   \n","1203                                      0.240951   \n","\n","      L1-icache-load-misses-instructions-normalize  \\\n","0                                         0.923485   \n","1                                         0.721313   \n","2                                         0.856010   \n","3                                         0.991868   \n","4                                         0.970942   \n","...                                            ...   \n","1199                                      0.177461   \n","1200                                      0.296237   \n","1201                                      0.300438   \n","1202                                      0.259996   \n","1203                                      0.118020   \n","\n","      LLC-load-misses-instructions-normalize  \\\n","0                                   0.053040   \n","1                                   0.012800   \n","2                                   0.021509   \n","3                                   0.027466   \n","4                                   0.030899   \n","...                                      ...   \n","1199                                0.021820   \n","1200                                0.023352   \n","1201                                0.026564   \n","1202                                0.033796   \n","1203                                0.100306   \n","\n","      LLC-store-misses-instructions-normalize  cpi-normalize  \n","0                                    0.395040       0.241558  \n","1                                    0.201669       0.140209  \n","2                                    0.204483       0.215716  \n","3                                    0.221530       0.235296  \n","4                                    0.220799       0.238692  \n","...                                       ...            ...  \n","1199                                 0.055067       0.199776  \n","1200                                 0.057608       0.201398  \n","1201                                 0.063818       0.261196  \n","1202                                 0.061057       0.214171  \n","1203                                 0.057843       0.152067  \n","\n","[1204 rows x 30 columns]"],"text/html":["\n","  <div id=\"df-9a229c65-40c2-45d7-b220-1fe25a52c6c1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>time</th>\n","      <th>cycles</th>\n","      <th>instructions</th>\n","      <th>branch-misses</th>\n","      <th>dTLB-load-misses</th>\n","      <th>dTLB-store-misses</th>\n","      <th>iTLB-load-misses</th>\n","      <th>L1-dcache-load-misses</th>\n","      <th>L1-icache-load-misses</th>\n","      <th>...</th>\n","      <th>LLC-store-misses-instructions</th>\n","      <th>branch-misses-instructions-normalize</th>\n","      <th>dTLB-load-misses-instructions-normalize</th>\n","      <th>dTLB-store-misses-instructions-normalize</th>\n","      <th>iTLB-load-misses-instructions-normalize</th>\n","      <th>L1-dcache-load-misses-instructions-normalize</th>\n","      <th>L1-icache-load-misses-instructions-normalize</th>\n","      <th>LLC-load-misses-instructions-normalize</th>\n","      <th>LLC-store-misses-instructions-normalize</th>\n","      <th>cpi-normalize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.200284</td>\n","      <td>417059090</td>\n","      <td>718926240</td>\n","      <td>1816854</td>\n","      <td>40777</td>\n","      <td>99279</td>\n","      <td>273653</td>\n","      <td>5348293</td>\n","      <td>22260463</td>\n","      <td>...</td>\n","      <td>0.001006</td>\n","      <td>0.256023</td>\n","      <td>0.019535</td>\n","      <td>0.386162</td>\n","      <td>0.524858</td>\n","      <td>0.095088</td>\n","      <td>0.923485</td>\n","      <td>0.053040</td>\n","      <td>0.395040</td>\n","      <td>0.241558</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.400625</td>\n","      <td>600429353</td>\n","      <td>1264059741</td>\n","      <td>1762581</td>\n","      <td>46136</td>\n","      <td>91010</td>\n","      <td>644469</td>\n","      <td>5937870</td>\n","      <td>30576639</td>\n","      <td>...</td>\n","      <td>0.000514</td>\n","      <td>0.113313</td>\n","      <td>0.012121</td>\n","      <td>0.201064</td>\n","      <td>0.703139</td>\n","      <td>0.046387</td>\n","      <td>0.721313</td>\n","      <td>0.012800</td>\n","      <td>0.201669</td>\n","      <td>0.140209</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0.600957</td>\n","      <td>596412738</td>\n","      <td>1077894708</td>\n","      <td>1878601</td>\n","      <td>67773</td>\n","      <td>85017</td>\n","      <td>709028</td>\n","      <td>11949806</td>\n","      <td>30938347</td>\n","      <td>...</td>\n","      <td>0.000521</td>\n","      <td>0.157213</td>\n","      <td>0.021793</td>\n","      <td>0.220317</td>\n","      <td>0.907291</td>\n","      <td>0.159866</td>\n","      <td>0.856010</td>\n","      <td>0.021509</td>\n","      <td>0.204483</td>\n","      <td>0.215716</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0.801286</td>\n","      <td>593417286</td>\n","      <td>1034513464</td>\n","      <td>2839667</td>\n","      <td>78653</td>\n","      <td>83785</td>\n","      <td>749997</td>\n","      <td>6926916</td>\n","      <td>34402529</td>\n","      <td>...</td>\n","      <td>0.000564</td>\n","      <td>0.283455</td>\n","      <td>0.026615</td>\n","      <td>0.226244</td>\n","      <td>1.000000</td>\n","      <td>0.081882</td>\n","      <td>0.991868</td>\n","      <td>0.027466</td>\n","      <td>0.221530</td>\n","      <td>0.235296</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1.001625</td>\n","      <td>593503862</td>\n","      <td>1028350399</td>\n","      <td>2805993</td>\n","      <td>77995</td>\n","      <td>83919</td>\n","      <td>684959</td>\n","      <td>6508580</td>\n","      <td>33476555</td>\n","      <td>...</td>\n","      <td>0.000562</td>\n","      <td>0.281403</td>\n","      <td>0.026548</td>\n","      <td>0.227969</td>\n","      <td>0.918725</td>\n","      <td>0.075370</td>\n","      <td>0.970942</td>\n","      <td>0.030899</td>\n","      <td>0.220799</td>\n","      <td>0.238692</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1199</th>\n","      <td>178</td>\n","      <td>89.607223</td>\n","      <td>1503234730</td>\n","      <td>2800464893</td>\n","      <td>11806135</td>\n","      <td>524510</td>\n","      <td>86128</td>\n","      <td>88352</td>\n","      <td>44141556</td>\n","      <td>16708256</td>\n","      <td>...</td>\n","      <td>0.000140</td>\n","      <td>0.468753</td>\n","      <td>0.067410</td>\n","      <td>0.085563</td>\n","      <td>0.043152</td>\n","      <td>0.242921</td>\n","      <td>0.177461</td>\n","      <td>0.021820</td>\n","      <td>0.055067</td>\n","      <td>0.199776</td>\n","    </tr>\n","    <tr>\n","      <th>1200</th>\n","      <td>179</td>\n","      <td>90.107834</td>\n","      <td>1499121731</td>\n","      <td>2784078262</td>\n","      <td>11760734</td>\n","      <td>421973</td>\n","      <td>100185</td>\n","      <td>148001</td>\n","      <td>38642584</td>\n","      <td>27690810</td>\n","      <td>...</td>\n","      <td>0.000147</td>\n","      <td>0.469824</td>\n","      <td>0.054311</td>\n","      <td>0.100210</td>\n","      <td>0.072972</td>\n","      <td>0.209486</td>\n","      <td>0.296237</td>\n","      <td>0.023352</td>\n","      <td>0.057608</td>\n","      <td>0.201398</td>\n","    </tr>\n","    <tr>\n","      <th>1201</th>\n","      <td>180</td>\n","      <td>90.608438</td>\n","      <td>1497387538</td>\n","      <td>2493642429</td>\n","      <td>14979657</td>\n","      <td>388037</td>\n","      <td>94524</td>\n","      <td>130718</td>\n","      <td>34529062</td>\n","      <td>25153091</td>\n","      <td>...</td>\n","      <td>0.000163</td>\n","      <td>0.694428</td>\n","      <td>0.055794</td>\n","      <td>0.105589</td>\n","      <td>0.071952</td>\n","      <td>0.208900</td>\n","      <td>0.300438</td>\n","      <td>0.026564</td>\n","      <td>0.063818</td>\n","      <td>0.261196</td>\n","    </tr>\n","    <tr>\n","      <th>1202</th>\n","      <td>181</td>\n","      <td>91.109022</td>\n","      <td>1496904987</td>\n","      <td>2713209326</td>\n","      <td>12998898</td>\n","      <td>415597</td>\n","      <td>89888</td>\n","      <td>124112</td>\n","      <td>32831324</td>\n","      <td>23691138</td>\n","      <td>...</td>\n","      <td>0.000156</td>\n","      <td>0.541215</td>\n","      <td>0.054901</td>\n","      <td>0.092214</td>\n","      <td>0.062738</td>\n","      <td>0.177882</td>\n","      <td>0.259996</td>\n","      <td>0.033796</td>\n","      <td>0.061057</td>\n","      <td>0.214171</td>\n","    </tr>\n","    <tr>\n","      <th>1203</th>\n","      <td>182</td>\n","      <td>91.609614</td>\n","      <td>1441094288</td>\n","      <td>2957307247</td>\n","      <td>6752328</td>\n","      <td>760261</td>\n","      <td>81145</td>\n","      <td>51511</td>\n","      <td>46285705</td>\n","      <td>11754018</td>\n","      <td>...</td>\n","      <td>0.000147</td>\n","      <td>0.225295</td>\n","      <td>0.092997</td>\n","      <td>0.076276</td>\n","      <td>0.023653</td>\n","      <td>0.240951</td>\n","      <td>0.118020</td>\n","      <td>0.100306</td>\n","      <td>0.057843</td>\n","      <td>0.152067</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1204 rows × 30 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a229c65-40c2-45d7-b220-1fe25a52c6c1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a229c65-40c2-45d7-b220-1fe25a52c6c1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a229c65-40c2-45d7-b220-1fe25a52c6c1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3f7faa3c-09e2-4647-b918-f7a4c3b90427\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f7faa3c-09e2-4647-b918-f7a4c3b90427')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3f7faa3c-09e2-4647-b918-f7a4c3b90427 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Printing Column Values to Dataframe\n","for column in df.columns :\n","  print(\"Index : \", df.columns.get_loc(column) , \" - Column : \" , column)\n","\n","print(df.columns)\n"],"metadata":{"id":"2nz3RfqFQgye","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182399603,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"f5573fa4-1cff-46e7-82a3-9f9f9bb23e5f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Index :  0  - Column :  Unnamed: 0\n","Index :  1  - Column :  time\n","Index :  2  - Column :  cycles\n","Index :  3  - Column :  instructions\n","Index :  4  - Column :  branch-misses\n","Index :  5  - Column :  dTLB-load-misses\n","Index :  6  - Column :  dTLB-store-misses\n","Index :  7  - Column :  iTLB-load-misses\n","Index :  8  - Column :  L1-dcache-load-misses\n","Index :  9  - Column :  L1-icache-load-misses\n","Index :  10  - Column :  LLC-load-misses\n","Index :  11  - Column :  LLC-store-misses\n","Index :  12  - Column :  cpi\n","Index :  13  - Column :  branch-misses-instructions\n","Index :  14  - Column :  dTLB-load-misses-instructions\n","Index :  15  - Column :  dTLB-store-misses-instructions\n","Index :  16  - Column :  iTLB-load-misses-instructions\n","Index :  17  - Column :  L1-dcache-load-misses-instructions\n","Index :  18  - Column :  L1-icache-load-misses-instructions\n","Index :  19  - Column :  LLC-load-misses-instructions\n","Index :  20  - Column :  LLC-store-misses-instructions\n","Index :  21  - Column :  branch-misses-instructions-normalize\n","Index :  22  - Column :  dTLB-load-misses-instructions-normalize\n","Index :  23  - Column :  dTLB-store-misses-instructions-normalize\n","Index :  24  - Column :  iTLB-load-misses-instructions-normalize\n","Index :  25  - Column :  L1-dcache-load-misses-instructions-normalize\n","Index :  26  - Column :  L1-icache-load-misses-instructions-normalize\n","Index :  27  - Column :  LLC-load-misses-instructions-normalize\n","Index :  28  - Column :  LLC-store-misses-instructions-normalize\n","Index :  29  - Column :  cpi-normalize\n","Index(['Unnamed: 0', 'time', 'cycles', 'instructions', 'branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses', 'cpi', 'branch-misses-instructions',\n","       'dTLB-load-misses-instructions', 'dTLB-store-misses-instructions',\n","       'iTLB-load-misses-instructions', 'L1-dcache-load-misses-instructions',\n","       'L1-icache-load-misses-instructions', 'LLC-load-misses-instructions',\n","       'LLC-store-misses-instructions', 'branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize', 'cpi-normalize'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["# Train Test Split"],"metadata":{"id":"ms0igq4Ujj7s"}},{"cell_type":"code","source":["import statsmodels.api as sm"],"metadata":{"id":"VvK9LrlnTVcl","executionInfo":{"status":"ok","timestamp":1697182404168,"user_tz":-330,"elapsed":4570,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["\n","X = df[['branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize']]\n","X = sm.add_constant(X)\n","\n","Y = df[['cpi']]\n","\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y ,\n","                                   random_state=104,\n","                                   test_size=0.05,\n","                                   shuffle=True)\n","print(\"X Train : \", X_train.shape)\n","print(\"Y Train : \", Y_train.shape)\n","print(\"X Test : \", X_test.shape)\n","print(\"Y Test : \", Y_test.shape)"],"metadata":{"id":"OBuwjsD1jruj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182404168,"user_tz":-330,"elapsed":7,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"62167fc4-afb9-41e0-9ffe-83a90ec41844"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["X Train :  (1143, 9)\n","Y Train :  (1143, 1)\n","X Test :  (61, 9)\n","Y Test :  (61, 1)\n"]}]},{"cell_type":"markdown","source":["**Importing Libraries**"],"metadata":{"id":"OmozwOESnuaw"}},{"cell_type":"markdown","source":["# OLS - Linear **Regression**\n","## Splititng Code - X and Y Dataset\n","\n"],"metadata":{"id":"dHscDSPiXj9j"}},{"cell_type":"code","source":["model = sm.OLS(Y_train, X_train).fit()\n","model.summary()"],"metadata":{"id":"HWhxxYfmTe2c","colab":{"base_uri":"https://localhost:8080/","height":587},"executionInfo":{"status":"ok","timestamp":1697182404854,"user_tz":-330,"elapsed":691,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"dfbd4a6f-2c11-4fb4-dcf2-f51b0ade210d"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                    cpi   R-squared:                       0.916\n","Model:                            OLS   Adj. R-squared:                  0.916\n","Method:                 Least Squares   F-statistic:                     1552.\n","Date:                Fri, 13 Oct 2023   Prob (F-statistic):               0.00\n","Time:                        07:33:23   Log-Likelihood:                 2852.0\n","No. Observations:                1143   AIC:                            -5686.\n","Df Residuals:                    1134   BIC:                            -5641.\n","Df Model:                           8                                         \n","Covariance Type:            nonrobust                                         \n","================================================================================================================\n","                                                   coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------------------------------\n","const                                            0.2815      0.003     82.929      0.000       0.275       0.288\n","branch-misses-instructions-normalize             0.2906      0.005     59.040      0.000       0.281       0.300\n","dTLB-load-misses-instructions-normalize          0.2694      0.020     13.393      0.000       0.230       0.309\n","dTLB-store-misses-instructions-normalize         0.0230      0.011      2.126      0.034       0.002       0.044\n","iTLB-load-misses-instructions-normalize          0.0504      0.012      4.063      0.000       0.026       0.075\n","L1-dcache-load-misses-instructions-normalize     0.2779      0.014     19.886      0.000       0.251       0.305\n","L1-icache-load-misses-instructions-normalize     0.1072      0.011     10.164      0.000       0.086       0.128\n","LLC-load-misses-instructions-normalize           0.3737      0.013     28.889      0.000       0.348       0.399\n","LLC-store-misses-instructions-normalize          0.0537      0.013      4.005      0.000       0.027       0.080\n","==============================================================================\n","Omnibus:                      493.953   Durbin-Watson:                   1.945\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):             3976.988\n","Skew:                           1.797   Prob(JB):                         0.00\n","Kurtosis:                      11.402   Cond. No.                         46.2\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>           <td>cpi</td>       <th>  R-squared:         </th> <td>   0.916</td>\n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.916</td>\n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1552.</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 13 Oct 2023</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>07:33:23</td>     <th>  Log-Likelihood:    </th> <td>  2852.0</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td>  1143</td>      <th>  AIC:               </th> <td>  -5686.</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>  1134</td>      <th>  BIC:               </th> <td>  -5641.</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     8</td>      <th>                     </th>     <td> </td>   \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                        <td></td>                          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>const</th>                                        <td>    0.2815</td> <td>    0.003</td> <td>   82.929</td> <td> 0.000</td> <td>    0.275</td> <td>    0.288</td>\n","</tr>\n","<tr>\n","  <th>branch-misses-instructions-normalize</th>         <td>    0.2906</td> <td>    0.005</td> <td>   59.040</td> <td> 0.000</td> <td>    0.281</td> <td>    0.300</td>\n","</tr>\n","<tr>\n","  <th>dTLB-load-misses-instructions-normalize</th>      <td>    0.2694</td> <td>    0.020</td> <td>   13.393</td> <td> 0.000</td> <td>    0.230</td> <td>    0.309</td>\n","</tr>\n","<tr>\n","  <th>dTLB-store-misses-instructions-normalize</th>     <td>    0.0230</td> <td>    0.011</td> <td>    2.126</td> <td> 0.034</td> <td>    0.002</td> <td>    0.044</td>\n","</tr>\n","<tr>\n","  <th>iTLB-load-misses-instructions-normalize</th>      <td>    0.0504</td> <td>    0.012</td> <td>    4.063</td> <td> 0.000</td> <td>    0.026</td> <td>    0.075</td>\n","</tr>\n","<tr>\n","  <th>L1-dcache-load-misses-instructions-normalize</th> <td>    0.2779</td> <td>    0.014</td> <td>   19.886</td> <td> 0.000</td> <td>    0.251</td> <td>    0.305</td>\n","</tr>\n","<tr>\n","  <th>L1-icache-load-misses-instructions-normalize</th> <td>    0.1072</td> <td>    0.011</td> <td>   10.164</td> <td> 0.000</td> <td>    0.086</td> <td>    0.128</td>\n","</tr>\n","<tr>\n","  <th>LLC-load-misses-instructions-normalize</th>       <td>    0.3737</td> <td>    0.013</td> <td>   28.889</td> <td> 0.000</td> <td>    0.348</td> <td>    0.399</td>\n","</tr>\n","<tr>\n","  <th>LLC-store-misses-instructions-normalize</th>      <td>    0.0537</td> <td>    0.013</td> <td>    4.005</td> <td> 0.000</td> <td>    0.027</td> <td>    0.080</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>493.953</td> <th>  Durbin-Watson:     </th> <td>   1.945</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>3976.988</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td> 1.797</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td>11.402</td>  <th>  Cond. No.          </th> <td>    46.2</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."],"text/latex":"\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}                               &       cpi        & \\textbf{  R-squared:         } &     0.916   \\\\\n\\textbf{Model:}                                       &       OLS        & \\textbf{  Adj. R-squared:    } &     0.916   \\\\\n\\textbf{Method:}                                      &  Least Squares   & \\textbf{  F-statistic:       } &     1552.   \\\\\n\\textbf{Date:}                                        & Fri, 13 Oct 2023 & \\textbf{  Prob (F-statistic):} &     0.00    \\\\\n\\textbf{Time:}                                        &     07:33:23     & \\textbf{  Log-Likelihood:    } &    2852.0   \\\\\n\\textbf{No. Observations:}                            &        1143      & \\textbf{  AIC:               } &    -5686.   \\\\\n\\textbf{Df Residuals:}                                &        1134      & \\textbf{  BIC:               } &    -5641.   \\\\\n\\textbf{Df Model:}                                    &           8      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}                             &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                                                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}                                        &       0.2815  &        0.003     &    82.929  &         0.000        &        0.275    &        0.288     \\\\\n\\textbf{branch-misses-instructions-normalize}         &       0.2906  &        0.005     &    59.040  &         0.000        &        0.281    &        0.300     \\\\\n\\textbf{dTLB-load-misses-instructions-normalize}      &       0.2694  &        0.020     &    13.393  &         0.000        &        0.230    &        0.309     \\\\\n\\textbf{dTLB-store-misses-instructions-normalize}     &       0.0230  &        0.011     &     2.126  &         0.034        &        0.002    &        0.044     \\\\\n\\textbf{iTLB-load-misses-instructions-normalize}      &       0.0504  &        0.012     &     4.063  &         0.000        &        0.026    &        0.075     \\\\\n\\textbf{L1-dcache-load-misses-instructions-normalize} &       0.2779  &        0.014     &    19.886  &         0.000        &        0.251    &        0.305     \\\\\n\\textbf{L1-icache-load-misses-instructions-normalize} &       0.1072  &        0.011     &    10.164  &         0.000        &        0.086    &        0.128     \\\\\n\\textbf{LLC-load-misses-instructions-normalize}       &       0.3737  &        0.013     &    28.889  &         0.000        &        0.348    &        0.399     \\\\\n\\textbf{LLC-store-misses-instructions-normalize}      &       0.0537  &        0.013     &     4.005  &         0.000        &        0.027    &        0.080     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 493.953 & \\textbf{  Durbin-Watson:     } &    1.945  \\\\\n\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } & 3976.988  \\\\\n\\textbf{Skew:}          &   1.797 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n\\textbf{Kurtosis:}      &  11.402 & \\textbf{  Cond. No.          } &     46.2  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","regressor = Lasso(alpha=0.00000000001,positive=True,max_iter=1000000)\n","temp=regressor.fit(X_train,Y_train)\n","\n","# Printing Cofficients :\n","coeff_df = pd.DataFrame(temp.coef_, X_train.columns, columns=['Cofficient'])\n","print(coeff_df)\n","print()\n","\n","print('Linear Intercept term: ',temp.intercept_) # This gives us the intercept term\n","\n","Y_pred = regressor.predict(X_test)\n","y_pred_overall = regressor.predict(X)\n","\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from math import sqrt\n","from scipy.stats import ttest_ind\n","import numpy as np\n","\n","\n","print()\n","rmse = sqrt(mean_squared_error(Y_test, Y_pred))\n","print(\"RMSE:- \",rmse)\n","rsq = r2_score(Y_test,Y_pred) #R-Squared on the training data\n","print('R-square: ',rsq)\n","rad=1-(((1-rsq)*(len(Y)-1))/(len(Y)-1-X.shape[1]))\n","print('Adjusted R-square: ', rad)\n","F=(rsq/(1-rsq))*((len(Y)-1-X.shape[1])/X.shape[1])\n","print('F value :',F)\n","print(\"Pvalues :\",ttest_ind(X, Y).pvalue)\n","\n","\n","Y_test1 = Y_test.to_numpy().flatten()\n","print(Y_test1.shape)\n","print(Y_pred.shape)\n","res= Y_test1 - Y_pred\n","print('Sum of Residuals :', np.sum(res))\n","# print('Residuals :', res)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BPmH7m4_yE2q","executionInfo":{"status":"ok","timestamp":1697182404855,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"150aab93-7d63-41c4-dfb7-5b9a2ba8519b"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["                                              Cofficient\n","const                                           0.000000\n","branch-misses-instructions-normalize            0.290576\n","dTLB-load-misses-instructions-normalize         0.269394\n","dTLB-store-misses-instructions-normalize        0.022957\n","iTLB-load-misses-instructions-normalize         0.050369\n","L1-dcache-load-misses-instructions-normalize    0.277939\n","L1-icache-load-misses-instructions-normalize    0.107162\n","LLC-load-misses-instructions-normalize          0.373659\n","LLC-store-misses-instructions-normalize         0.053665\n","\n","Linear Intercept term:  [0.28150682]\n","\n","RMSE:-  0.022873591130947116\n","R-square:  0.969157171179622\n","Adjusted R-square:  0.9689246875452975\n","F value : 4168.711376161008\n","Pvalues : [0.         0.00308455 0.         0.         0.         0.\n"," 0.         0.         0.        ]\n","(61,)\n","(61,)\n","Sum of Residuals : 0.2403706568275613\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/scipy/stats/_axis_nan_policy.py:551: RuntimeWarning: Precision loss occurred in moment calculation due to catastrophic cancellation. This occurs when the data are nearly identical. Results may be unreliable.\n","  res = hypotest_fun_out(*samples, axis=axis, **kwds)\n"]}]},{"cell_type":"markdown","source":["# Plot Graph"],"metadata":{"id":"Zz-gBpwyYKmi"}},{"cell_type":"code","source":["from statsmodels.tools.eval_measures import rmse\n","\n","\n","# Trying to Plot the Stack of the Predictied Values of the model w.r.t. to the CPI\n","Y_pred = regressor.predict(X_test)\n","print(\"Y Test : \", Y_test.shape)\n","print(\"Y Prediction : \", Y_pred.shape)\n","# print(Y_test)\n","# print(Y_pred)\n","\n","\n","# Import Package\n","import matplotlib.pyplot as plt\n","\n","# Line Plot\n","x_axis = [i+1 for i in range(Y_test.shape[0])]\n","plt.style.use('default')\n","plt.title(\"CPI - Predicted vs Test\")\n","plt.ylabel(\"CPI\")\n","plt.xlabel(\"No. of Observations\")\n","\n","plt.plot(x_axis, Y_test, label = \"Test\", linestyle =  \"-\" )\n","plt.plot(x_axis, Y_pred, label = \"Prediction\", linestyle = '--')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"O4N5luDBYKFr","colab":{"base_uri":"https://localhost:8080/","height":507},"executionInfo":{"status":"ok","timestamp":1697182406167,"user_tz":-330,"elapsed":1316,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"d5633d9b-14d7-464f-bf5d-bef464aa7df7"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Y Test :  (61, 1)\n","Y Prediction :  (61,)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Computing CPI Stack"],"metadata":{"id":"1g-XYFTD_VY-"}},{"cell_type":"code","source":["cpi_stack = ['const', 'branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize']\n","\n","\n","# Printing Cofficients :\n","coeff_df = pd.DataFrame(temp.coef_, X_train.columns, columns=['Cofficient'])\n","print(coeff_df)\n","print()\n","\n","print('Linear Intercept term: ',temp.intercept_) # This gives us the intercept term\n"],"metadata":{"id":"OwLPW5lRBgZH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182406167,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"c1503d55-b679-4cc9-f6ff-d96b4e5dbbb5"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["                                              Cofficient\n","const                                           0.000000\n","branch-misses-instructions-normalize            0.290576\n","dTLB-load-misses-instructions-normalize         0.269394\n","dTLB-store-misses-instructions-normalize        0.022957\n","iTLB-load-misses-instructions-normalize         0.050369\n","L1-dcache-load-misses-instructions-normalize    0.277939\n","L1-icache-load-misses-instructions-normalize    0.107162\n","LLC-load-misses-instructions-normalize          0.373659\n","LLC-store-misses-instructions-normalize         0.053665\n","\n","Linear Intercept term:  [0.28150682]\n"]}]},{"cell_type":"code","source":["stack = []\n","# Base -\n","stack.append(temp.intercept_)\n","# Adding other parameters\n","for i in range(1, coeff_df.shape[0]) :\n","  champ = coeff_df.iloc[i, 0] * (df[cpi_stack[i]].mean())\n","  stack.append(champ)\n","\n","print(\"CPI Stack Sum : \", sum(stack) )\n","print(\"Mean of CPI : \", df['cpi'].mean())"],"metadata":{"id":"qLv26dq_CK7j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182406167,"user_tz":-330,"elapsed":5,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"1da833f7-8a4a-4668-ad5e-a67d4b52063e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["CPI Stack Sum :  [0.59600787]\n","Mean of CPI :  0.5962075126021594\n"]}]},{"cell_type":"code","source":["cpi_stack_labels = ['const', 'branch-misses',\n","       'dTLB-load-misses',\n","       'dTLB-store-misses',\n","       'iTLB-load-misses',\n","       'L1-dcache-load-misses',\n","       'L1-icache-load-misses',\n","       'LLC-load-misses',\n","       'LLC-store-misses']\n","\n","prefix_sum = [stack[0]]\n","for i in range(1, len(stack)) :\n","  prefix_sum.append(prefix_sum[-1] + stack[i])\n","\n","# print(prefix_sum)\n","width = 0.35\n","plt.style.use('default')\n","fig, ax = plt.subplots()\n","fig.set_size_inches(8, 5)\n","for i in range(len(stack)-1, -1, -1) :\n","  ax.bar(width, prefix_sum[i], label = cpi_stack_labels[i], align='edge' )\n","  # ax.bar(width, prefix_sum[i])\n","\n","ax.set_ylabel(\"CPI\", fontweight='bold')\n","ax.set_title(\"CPI Stack\", fontweight='bold')\n","plt.legend(bbox_to_anchor=(0.3, 1.0), borderpad=2)\n","legend_properties = {'weight':'normal'}\n","plt.legend(prop=legend_properties)\n","\n","\n","plt.tick_params(\n","axis='x', # changes apply to the x-axis\n","which='both', # both major and minor ticks are affected\n","bottom=True, # ticks along the bottom edge are off\n","top=True, # ticks along the top edge are off\n","labelbottom=False) # labels along the bottom edge are off\n","\n","images_dir = \"/content/drive/MyDrive/Problem_2/cpi\"\n","\n","plt.savefig(f\"{images_dir}/gcc_500_LR.jpeg\")\n","plt.show()\n","\n","\n","\n"],"metadata":{"id":"O3ye_ncaG01e","colab":{"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"status":"ok","timestamp":1697182407052,"user_tz":-330,"elapsed":889,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"5a0de52f-c5e7-4c47-cd6a-abe7e05caf03"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}