{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1tYx6R18nUgfBgZpFa15jYqoi3nwcNGgb","timestamp":1697179340494}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Uploading CSV File"],"metadata":{"id":"iniF_-9EZ-sE"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_-CIKf_hZoOd","executionInfo":{"status":"ok","timestamp":1697182426568,"user_tz":-330,"elapsed":22474,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"8b8bc3f6-5497-4bfc-9ba6-5bd12b0fac7a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["## Basic Dataframe Sample"],"metadata":{"id":"HtNIcNFXaSqg"}},{"cell_type":"code","source":["import pandas as pd\n","# Dataframe\n","file_id = \"/content/drive/MyDrive/Problem_2/mcf_500_21.log.csv\"\n","df = pd.read_csv(file_id)\n"],"metadata":{"id":"Rzb6wmWzaVIC","executionInfo":{"status":"ok","timestamp":1697182427954,"user_tz":-330,"elapsed":1389,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# Display first 10 rows\n","result = df.head(10)\n","print(\"First 10 rows\")\n","result"],"metadata":{"id":"mRFzBWujbswY","colab":{"base_uri":"https://localhost:8080/","height":481},"executionInfo":{"status":"ok","timestamp":1697182427954,"user_tz":-330,"elapsed":11,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"b14a87e5-aa5e-4f5b-8937-cec6339a7eeb"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["First 10 rows\n"]},{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0      time      cycles  instructions  branch-misses  \\\n","0           0  0.500548  1356670963    1955134519       15967860   \n","1           1  1.001177  1529855882    1500908906       27054890   \n","2           2  1.501808  1535154265    1482256698       27561744   \n","3           3  2.002428  1534810543    1469731833       27583584   \n","4           4  2.503063  1534948091    1485070833       27436425   \n","5           5  3.003685  1530381554    1503434851       27179368   \n","6           6  3.503792  1531856145    1549998129       26731422   \n","7           7  4.004414  1532186357    1557018794       26871986   \n","8           8  4.505048  1532781269    1528039820       26926700   \n","9           9  5.005677  1532388949    1517968514       27114954   \n","\n","   dTLB-load-misses  dTLB-store-misses  iTLB-load-misses  \\\n","0             82621              42221              3210   \n","1             64383               1104              1474   \n","2             47366                998              1240   \n","3             40835                872              1257   \n","4             31562               1027              1184   \n","5             26123                989              1263   \n","6             20246                987              1376   \n","7             21200                923              1414   \n","8             25187                924              1217   \n","9             25529                929              1130   \n","\n","   L1-dcache-load-misses  L1-icache-load-misses  ...  LLC-store-misses  \\\n","0               79365540                 336876  ...            234752   \n","1               49949195                  87312  ...              2851   \n","2               46483995                  73699  ...              2114   \n","3               45348267                  89000  ...              2582   \n","4               44916269                  74159  ...              2542   \n","5               44929126                  93368  ...              2260   \n","6               45281418                  78712  ...              1502   \n","7               45778565                  95845  ...              1220   \n","8               45554484                  75334  ...              1403   \n","9               45281111                  73314  ...              1315   \n","\n","        cpi  Unnamed: 13  Unnamed: 14  Unnamed: 15  Unnamed: 16  Unnamed: 17  \\\n","0  0.693902          NaN          NaN          NaN          NaN          NaN   \n","1  1.019286          NaN          NaN          NaN          NaN          NaN   \n","2  1.035687          NaN          NaN          NaN          NaN          NaN   \n","3  1.044279          NaN          NaN          NaN          NaN          NaN   \n","4  1.033586          NaN          NaN          NaN          NaN          NaN   \n","5  1.017923          NaN          NaN          NaN          NaN          NaN   \n","6  0.988295          NaN          NaN          NaN          NaN          NaN   \n","7  0.984051          NaN          NaN          NaN          NaN          NaN   \n","8  1.003103          NaN          NaN          NaN          NaN          NaN   \n","9  1.009500          NaN          NaN          NaN          NaN          NaN   \n","\n","   Unnamed: 18  Unnamed: 19  Unnamed: 20  \n","0          NaN          NaN          NaN  \n","1          NaN          NaN          NaN  \n","2          NaN          NaN          NaN  \n","3          NaN          NaN          NaN  \n","4          NaN          NaN          NaN  \n","5          NaN          NaN          NaN  \n","6          NaN          NaN          NaN  \n","7          NaN          NaN          NaN  \n","8          NaN          NaN          NaN  \n","9          NaN          NaN          NaN  \n","\n","[10 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-c61a14cb-13a2-45bd-8332-a3ec8287832c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>time</th>\n","      <th>cycles</th>\n","      <th>instructions</th>\n","      <th>branch-misses</th>\n","      <th>dTLB-load-misses</th>\n","      <th>dTLB-store-misses</th>\n","      <th>iTLB-load-misses</th>\n","      <th>L1-dcache-load-misses</th>\n","      <th>L1-icache-load-misses</th>\n","      <th>...</th>\n","      <th>LLC-store-misses</th>\n","      <th>cpi</th>\n","      <th>Unnamed: 13</th>\n","      <th>Unnamed: 14</th>\n","      <th>Unnamed: 15</th>\n","      <th>Unnamed: 16</th>\n","      <th>Unnamed: 17</th>\n","      <th>Unnamed: 18</th>\n","      <th>Unnamed: 19</th>\n","      <th>Unnamed: 20</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.500548</td>\n","      <td>1356670963</td>\n","      <td>1955134519</td>\n","      <td>15967860</td>\n","      <td>82621</td>\n","      <td>42221</td>\n","      <td>3210</td>\n","      <td>79365540</td>\n","      <td>336876</td>\n","      <td>...</td>\n","      <td>234752</td>\n","      <td>0.693902</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.001177</td>\n","      <td>1529855882</td>\n","      <td>1500908906</td>\n","      <td>27054890</td>\n","      <td>64383</td>\n","      <td>1104</td>\n","      <td>1474</td>\n","      <td>49949195</td>\n","      <td>87312</td>\n","      <td>...</td>\n","      <td>2851</td>\n","      <td>1.019286</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1.501808</td>\n","      <td>1535154265</td>\n","      <td>1482256698</td>\n","      <td>27561744</td>\n","      <td>47366</td>\n","      <td>998</td>\n","      <td>1240</td>\n","      <td>46483995</td>\n","      <td>73699</td>\n","      <td>...</td>\n","      <td>2114</td>\n","      <td>1.035687</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2.002428</td>\n","      <td>1534810543</td>\n","      <td>1469731833</td>\n","      <td>27583584</td>\n","      <td>40835</td>\n","      <td>872</td>\n","      <td>1257</td>\n","      <td>45348267</td>\n","      <td>89000</td>\n","      <td>...</td>\n","      <td>2582</td>\n","      <td>1.044279</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2.503063</td>\n","      <td>1534948091</td>\n","      <td>1485070833</td>\n","      <td>27436425</td>\n","      <td>31562</td>\n","      <td>1027</td>\n","      <td>1184</td>\n","      <td>44916269</td>\n","      <td>74159</td>\n","      <td>...</td>\n","      <td>2542</td>\n","      <td>1.033586</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>3.003685</td>\n","      <td>1530381554</td>\n","      <td>1503434851</td>\n","      <td>27179368</td>\n","      <td>26123</td>\n","      <td>989</td>\n","      <td>1263</td>\n","      <td>44929126</td>\n","      <td>93368</td>\n","      <td>...</td>\n","      <td>2260</td>\n","      <td>1.017923</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>6</td>\n","      <td>3.503792</td>\n","      <td>1531856145</td>\n","      <td>1549998129</td>\n","      <td>26731422</td>\n","      <td>20246</td>\n","      <td>987</td>\n","      <td>1376</td>\n","      <td>45281418</td>\n","      <td>78712</td>\n","      <td>...</td>\n","      <td>1502</td>\n","      <td>0.988295</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7</td>\n","      <td>4.004414</td>\n","      <td>1532186357</td>\n","      <td>1557018794</td>\n","      <td>26871986</td>\n","      <td>21200</td>\n","      <td>923</td>\n","      <td>1414</td>\n","      <td>45778565</td>\n","      <td>95845</td>\n","      <td>...</td>\n","      <td>1220</td>\n","      <td>0.984051</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>4.505048</td>\n","      <td>1532781269</td>\n","      <td>1528039820</td>\n","      <td>26926700</td>\n","      <td>25187</td>\n","      <td>924</td>\n","      <td>1217</td>\n","      <td>45554484</td>\n","      <td>75334</td>\n","      <td>...</td>\n","      <td>1403</td>\n","      <td>1.003103</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>9</td>\n","      <td>5.005677</td>\n","      <td>1532388949</td>\n","      <td>1517968514</td>\n","      <td>27114954</td>\n","      <td>25529</td>\n","      <td>929</td>\n","      <td>1130</td>\n","      <td>45281111</td>\n","      <td>73314</td>\n","      <td>...</td>\n","      <td>1315</td>\n","      <td>1.009500</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c61a14cb-13a2-45bd-8332-a3ec8287832c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c61a14cb-13a2-45bd-8332-a3ec8287832c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c61a14cb-13a2-45bd-8332-a3ec8287832c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c152bc7b-b3d3-4334-aee8-336b1d4fdccf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c152bc7b-b3d3-4334-aee8-336b1d4fdccf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c152bc7b-b3d3-4334-aee8-336b1d4fdccf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["# Printing Column Values to Dataframe\n","for column in df.columns :\n","  print(\"Index : \", df.columns.get_loc(column) , \" - Column : \" , column)\n","\n","print(df.columns)"],"metadata":{"id":"KVdrGZZOb-7A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182427954,"user_tz":-330,"elapsed":8,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"86e4c55c-dcd8-442a-e4ed-b7a3dd5019c0"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Index :  0  - Column :  Unnamed: 0\n","Index :  1  - Column :  time\n","Index :  2  - Column :  cycles\n","Index :  3  - Column :  instructions\n","Index :  4  - Column :  branch-misses\n","Index :  5  - Column :  dTLB-load-misses\n","Index :  6  - Column :  dTLB-store-misses\n","Index :  7  - Column :  iTLB-load-misses\n","Index :  8  - Column :  L1-dcache-load-misses\n","Index :  9  - Column :  L1-icache-load-misses\n","Index :  10  - Column :  LLC-load-misses\n","Index :  11  - Column :  LLC-store-misses\n","Index :  12  - Column :  cpi\n","Index :  13  - Column :  Unnamed: 13\n","Index :  14  - Column :  Unnamed: 14\n","Index :  15  - Column :  Unnamed: 15\n","Index :  16  - Column :  Unnamed: 16\n","Index :  17  - Column :  Unnamed: 17\n","Index :  18  - Column :  Unnamed: 18\n","Index :  19  - Column :  Unnamed: 19\n","Index :  20  - Column :  Unnamed: 20\n","Index(['Unnamed: 0', 'time', 'cycles', 'instructions', 'branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses', 'cpi', 'Unnamed: 13', 'Unnamed: 14', 'Unnamed: 15',\n","       'Unnamed: 16', 'Unnamed: 17', 'Unnamed: 18', 'Unnamed: 19',\n","       'Unnamed: 20'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["## Computing the Values of Column Name / Instructions"],"metadata":{"id":"26IPaON5OkYP"}},{"cell_type":"code","source":["columns = ['branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses']\n","\n","for column in columns :\n","  df[str(column) + '-' + 'instructions'] = df[column] / df['instructions']\n","\n","# Normalizing Data\n","for column in columns :\n","  column_name = str(column) + '-' + 'instructions'\n","  df[column_name + '-' + 'normalize'] = (df[column_name] - df[column_name].min()) / (df[column_name].max() - df[column_name].min())\n","\n","# Normalizing CPI\n","column_name = 'cpi'\n","df[column_name + '-' + 'normalize'] = (df[column_name] - df[column_name].min()) / (df[column_name].max() - df[column_name].min())\n","df"],"metadata":{"id":"-QW4KN6eOOzY","colab":{"base_uri":"https://localhost:8080/","height":495},"executionInfo":{"status":"ok","timestamp":1697182427954,"user_tz":-330,"elapsed":7,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"20e20042-9ea7-4dbe-a3a0-3894b4175646"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0        time      cycles  instructions  branch-misses  \\\n","0             0    0.500548  1356670963    1955134519       15967860   \n","1             1    1.001177  1529855882    1500908906       27054890   \n","2             2    1.501808  1535154265    1482256698       27561744   \n","3             3    2.002428  1534810543    1469731833       27583584   \n","4             4    2.503063  1534948091    1485070833       27436425   \n","..          ...         ...         ...           ...            ...   \n","724         724  362.940875  1524303209    2161183501       20374771   \n","725         725  363.441528  1408272205    2191901001       10109576   \n","726         726  363.942174  1505248356    1027539625         213907   \n","727         727  364.442806  1500439308    1241527978        1769827   \n","728         728  364.943422  1544308526    1016947151         161281   \n","\n","     dTLB-load-misses  dTLB-store-misses  iTLB-load-misses  \\\n","0               82621              42221              3210   \n","1               64383               1104              1474   \n","2               47366                998              1240   \n","3               40835                872              1257   \n","4               31562               1027              1184   \n","..                ...                ...               ...   \n","724             98027               3808              1343   \n","725            186913              39333              1291   \n","726             96494              31609               380   \n","727             50938             245988               790   \n","728              1390                655               139   \n","\n","     L1-dcache-load-misses  L1-icache-load-misses  ...  \\\n","0                 79365540                 336876  ...   \n","1                 49949195                  87312  ...   \n","2                 46483995                  73699  ...   \n","3                 45348267                  89000  ...   \n","4                 44916269                  74159  ...   \n","..                     ...                    ...  ...   \n","724               82096848                  81492  ...   \n","725              116442811                  87071  ...   \n","726              228500714                  71954  ...   \n","727              213613419                  79082  ...   \n","728              234833466                  68125  ...   \n","\n","     LLC-store-misses-instructions  branch-misses-instructions-normalize  \\\n","0                     1.200695e-04                              0.318818   \n","1                     1.899516e-06                              0.711283   \n","2                     1.426204e-06                              0.733926   \n","3                     1.756783e-06                              0.740826   \n","4                     1.711703e-06                              0.729164   \n","..                             ...                                   ...   \n","724                   2.045638e-06                              0.368996   \n","725                   3.416988e-05                              0.177298   \n","726                   5.607667e-05                              0.001974   \n","727                   3.425054e-05                              0.050436   \n","728                   8.260016e-08                              0.000000   \n","\n","     dTLB-load-misses-instructions-normalize  \\\n","0                                   0.003837   \n","1                                   0.003897   \n","2                                   0.002870   \n","3                                   0.002479   \n","4                                   0.001866   \n","..                                       ...   \n","724                                 0.004128   \n","725                                 0.007874   \n","726                                 0.008684   \n","727                                 0.003722   \n","728                                 0.000000   \n","\n","     dTLB-store-misses-instructions-normalize  \\\n","0                                    0.003369   \n","1                                    0.000026   \n","2                                    0.000016   \n","3                                    0.000003   \n","4                                    0.000019   \n","..                                        ...   \n","724                                  0.000191   \n","725                                  0.002784   \n","726                                  0.004838   \n","727                                  0.031664   \n","728                                  0.000011   \n","\n","     iTLB-load-misses-instructions-normalize  \\\n","0                                   0.623369   \n","1                                   0.350869   \n","2                                   0.290769   \n","3                                   0.298491   \n","4                                   0.274540   \n","..                                       ...   \n","724                                 0.201909   \n","725                                 0.188513   \n","726                                 0.097989   \n","727                                 0.208060   \n","728                                 0.001699   \n","\n","     L1-dcache-load-misses-instructions-normalize  \\\n","0                                        0.056970   \n","1                                        0.020730   \n","2                                        0.011222   \n","3                                        0.008717   \n","4                                        0.005697   \n","..                                            ...   \n","724                                      0.044056   \n","725                                      0.119057   \n","726                                      0.957669   \n","727                                      0.708345   \n","728                                      1.000000   \n","\n","     L1-icache-load-misses-instructions-normalize  \\\n","0                                        0.924870   \n","1                                        0.202915   \n","2                                        0.149450   \n","3                                        0.217986   \n","4                                        0.150813   \n","..                                            ...   \n","724                                      0.073455   \n","725                                      0.086213   \n","726                                      0.277892   \n","727                                      0.237861   \n","728                                      0.258688   \n","\n","     LLC-load-misses-instructions-normalize  \\\n","0                                  0.088189   \n","1                                  0.052710   \n","2                                  0.039167   \n","3                                  0.036243   \n","4                                  0.032989   \n","..                                      ...   \n","724                                0.043324   \n","725                                0.185311   \n","726                                0.053614   \n","727                                0.112017   \n","728                                0.000000   \n","\n","     LLC-store-misses-instructions-normalize  cpi-normalize  \n","0                                   0.010326       0.160477  \n","1                                   0.000156       0.448537  \n","2                                   0.000116       0.463057  \n","3                                   0.000144       0.470663  \n","4                                   0.000140       0.461196  \n","..                                       ...            ...  \n","724                                 0.000169       0.170576  \n","725                                 0.002934       0.114961  \n","726                                 0.004819       0.843040  \n","727                                 0.002940       0.616084  \n","728                                 0.000000       0.890551  \n","\n","[729 rows x 38 columns]"],"text/html":["\n","  <div id=\"df-60daa69a-afd4-430c-91c1-864ef3fab385\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>time</th>\n","      <th>cycles</th>\n","      <th>instructions</th>\n","      <th>branch-misses</th>\n","      <th>dTLB-load-misses</th>\n","      <th>dTLB-store-misses</th>\n","      <th>iTLB-load-misses</th>\n","      <th>L1-dcache-load-misses</th>\n","      <th>L1-icache-load-misses</th>\n","      <th>...</th>\n","      <th>LLC-store-misses-instructions</th>\n","      <th>branch-misses-instructions-normalize</th>\n","      <th>dTLB-load-misses-instructions-normalize</th>\n","      <th>dTLB-store-misses-instructions-normalize</th>\n","      <th>iTLB-load-misses-instructions-normalize</th>\n","      <th>L1-dcache-load-misses-instructions-normalize</th>\n","      <th>L1-icache-load-misses-instructions-normalize</th>\n","      <th>LLC-load-misses-instructions-normalize</th>\n","      <th>LLC-store-misses-instructions-normalize</th>\n","      <th>cpi-normalize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.500548</td>\n","      <td>1356670963</td>\n","      <td>1955134519</td>\n","      <td>15967860</td>\n","      <td>82621</td>\n","      <td>42221</td>\n","      <td>3210</td>\n","      <td>79365540</td>\n","      <td>336876</td>\n","      <td>...</td>\n","      <td>1.200695e-04</td>\n","      <td>0.318818</td>\n","      <td>0.003837</td>\n","      <td>0.003369</td>\n","      <td>0.623369</td>\n","      <td>0.056970</td>\n","      <td>0.924870</td>\n","      <td>0.088189</td>\n","      <td>0.010326</td>\n","      <td>0.160477</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1.001177</td>\n","      <td>1529855882</td>\n","      <td>1500908906</td>\n","      <td>27054890</td>\n","      <td>64383</td>\n","      <td>1104</td>\n","      <td>1474</td>\n","      <td>49949195</td>\n","      <td>87312</td>\n","      <td>...</td>\n","      <td>1.899516e-06</td>\n","      <td>0.711283</td>\n","      <td>0.003897</td>\n","      <td>0.000026</td>\n","      <td>0.350869</td>\n","      <td>0.020730</td>\n","      <td>0.202915</td>\n","      <td>0.052710</td>\n","      <td>0.000156</td>\n","      <td>0.448537</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1.501808</td>\n","      <td>1535154265</td>\n","      <td>1482256698</td>\n","      <td>27561744</td>\n","      <td>47366</td>\n","      <td>998</td>\n","      <td>1240</td>\n","      <td>46483995</td>\n","      <td>73699</td>\n","      <td>...</td>\n","      <td>1.426204e-06</td>\n","      <td>0.733926</td>\n","      <td>0.002870</td>\n","      <td>0.000016</td>\n","      <td>0.290769</td>\n","      <td>0.011222</td>\n","      <td>0.149450</td>\n","      <td>0.039167</td>\n","      <td>0.000116</td>\n","      <td>0.463057</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>2.002428</td>\n","      <td>1534810543</td>\n","      <td>1469731833</td>\n","      <td>27583584</td>\n","      <td>40835</td>\n","      <td>872</td>\n","      <td>1257</td>\n","      <td>45348267</td>\n","      <td>89000</td>\n","      <td>...</td>\n","      <td>1.756783e-06</td>\n","      <td>0.740826</td>\n","      <td>0.002479</td>\n","      <td>0.000003</td>\n","      <td>0.298491</td>\n","      <td>0.008717</td>\n","      <td>0.217986</td>\n","      <td>0.036243</td>\n","      <td>0.000144</td>\n","      <td>0.470663</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>2.503063</td>\n","      <td>1534948091</td>\n","      <td>1485070833</td>\n","      <td>27436425</td>\n","      <td>31562</td>\n","      <td>1027</td>\n","      <td>1184</td>\n","      <td>44916269</td>\n","      <td>74159</td>\n","      <td>...</td>\n","      <td>1.711703e-06</td>\n","      <td>0.729164</td>\n","      <td>0.001866</td>\n","      <td>0.000019</td>\n","      <td>0.274540</td>\n","      <td>0.005697</td>\n","      <td>0.150813</td>\n","      <td>0.032989</td>\n","      <td>0.000140</td>\n","      <td>0.461196</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>724</th>\n","      <td>724</td>\n","      <td>362.940875</td>\n","      <td>1524303209</td>\n","      <td>2161183501</td>\n","      <td>20374771</td>\n","      <td>98027</td>\n","      <td>3808</td>\n","      <td>1343</td>\n","      <td>82096848</td>\n","      <td>81492</td>\n","      <td>...</td>\n","      <td>2.045638e-06</td>\n","      <td>0.368996</td>\n","      <td>0.004128</td>\n","      <td>0.000191</td>\n","      <td>0.201909</td>\n","      <td>0.044056</td>\n","      <td>0.073455</td>\n","      <td>0.043324</td>\n","      <td>0.000169</td>\n","      <td>0.170576</td>\n","    </tr>\n","    <tr>\n","      <th>725</th>\n","      <td>725</td>\n","      <td>363.441528</td>\n","      <td>1408272205</td>\n","      <td>2191901001</td>\n","      <td>10109576</td>\n","      <td>186913</td>\n","      <td>39333</td>\n","      <td>1291</td>\n","      <td>116442811</td>\n","      <td>87071</td>\n","      <td>...</td>\n","      <td>3.416988e-05</td>\n","      <td>0.177298</td>\n","      <td>0.007874</td>\n","      <td>0.002784</td>\n","      <td>0.188513</td>\n","      <td>0.119057</td>\n","      <td>0.086213</td>\n","      <td>0.185311</td>\n","      <td>0.002934</td>\n","      <td>0.114961</td>\n","    </tr>\n","    <tr>\n","      <th>726</th>\n","      <td>726</td>\n","      <td>363.942174</td>\n","      <td>1505248356</td>\n","      <td>1027539625</td>\n","      <td>213907</td>\n","      <td>96494</td>\n","      <td>31609</td>\n","      <td>380</td>\n","      <td>228500714</td>\n","      <td>71954</td>\n","      <td>...</td>\n","      <td>5.607667e-05</td>\n","      <td>0.001974</td>\n","      <td>0.008684</td>\n","      <td>0.004838</td>\n","      <td>0.097989</td>\n","      <td>0.957669</td>\n","      <td>0.277892</td>\n","      <td>0.053614</td>\n","      <td>0.004819</td>\n","      <td>0.843040</td>\n","    </tr>\n","    <tr>\n","      <th>727</th>\n","      <td>727</td>\n","      <td>364.442806</td>\n","      <td>1500439308</td>\n","      <td>1241527978</td>\n","      <td>1769827</td>\n","      <td>50938</td>\n","      <td>245988</td>\n","      <td>790</td>\n","      <td>213613419</td>\n","      <td>79082</td>\n","      <td>...</td>\n","      <td>3.425054e-05</td>\n","      <td>0.050436</td>\n","      <td>0.003722</td>\n","      <td>0.031664</td>\n","      <td>0.208060</td>\n","      <td>0.708345</td>\n","      <td>0.237861</td>\n","      <td>0.112017</td>\n","      <td>0.002940</td>\n","      <td>0.616084</td>\n","    </tr>\n","    <tr>\n","      <th>728</th>\n","      <td>728</td>\n","      <td>364.943422</td>\n","      <td>1544308526</td>\n","      <td>1016947151</td>\n","      <td>161281</td>\n","      <td>1390</td>\n","      <td>655</td>\n","      <td>139</td>\n","      <td>234833466</td>\n","      <td>68125</td>\n","      <td>...</td>\n","      <td>8.260016e-08</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000011</td>\n","      <td>0.001699</td>\n","      <td>1.000000</td>\n","      <td>0.258688</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.890551</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>729 rows × 38 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-60daa69a-afd4-430c-91c1-864ef3fab385')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-60daa69a-afd4-430c-91c1-864ef3fab385 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-60daa69a-afd4-430c-91c1-864ef3fab385');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-96fbc0a6-608f-4e50-8637-490dda078518\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96fbc0a6-608f-4e50-8637-490dda078518')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-96fbc0a6-608f-4e50-8637-490dda078518 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Printing Column Values to Dataframe\n","for column in df.columns :\n","  print(\"Index : \", df.columns.get_loc(column) , \" - Column : \" , column)\n","\n","print(df.columns)\n"],"metadata":{"id":"2nz3RfqFQgye","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182427954,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"18259daa-535d-4e9b-aa92-334df5ab4eae"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Index :  0  - Column :  Unnamed: 0\n","Index :  1  - Column :  time\n","Index :  2  - Column :  cycles\n","Index :  3  - Column :  instructions\n","Index :  4  - Column :  branch-misses\n","Index :  5  - Column :  dTLB-load-misses\n","Index :  6  - Column :  dTLB-store-misses\n","Index :  7  - Column :  iTLB-load-misses\n","Index :  8  - Column :  L1-dcache-load-misses\n","Index :  9  - Column :  L1-icache-load-misses\n","Index :  10  - Column :  LLC-load-misses\n","Index :  11  - Column :  LLC-store-misses\n","Index :  12  - Column :  cpi\n","Index :  13  - Column :  Unnamed: 13\n","Index :  14  - Column :  Unnamed: 14\n","Index :  15  - Column :  Unnamed: 15\n","Index :  16  - Column :  Unnamed: 16\n","Index :  17  - Column :  Unnamed: 17\n","Index :  18  - Column :  Unnamed: 18\n","Index :  19  - Column :  Unnamed: 19\n","Index :  20  - Column :  Unnamed: 20\n","Index :  21  - Column :  branch-misses-instructions\n","Index :  22  - Column :  dTLB-load-misses-instructions\n","Index :  23  - Column :  dTLB-store-misses-instructions\n","Index :  24  - Column :  iTLB-load-misses-instructions\n","Index :  25  - Column :  L1-dcache-load-misses-instructions\n","Index :  26  - Column :  L1-icache-load-misses-instructions\n","Index :  27  - Column :  LLC-load-misses-instructions\n","Index :  28  - Column :  LLC-store-misses-instructions\n","Index :  29  - Column :  branch-misses-instructions-normalize\n","Index :  30  - Column :  dTLB-load-misses-instructions-normalize\n","Index :  31  - Column :  dTLB-store-misses-instructions-normalize\n","Index :  32  - Column :  iTLB-load-misses-instructions-normalize\n","Index :  33  - Column :  L1-dcache-load-misses-instructions-normalize\n","Index :  34  - Column :  L1-icache-load-misses-instructions-normalize\n","Index :  35  - Column :  LLC-load-misses-instructions-normalize\n","Index :  36  - Column :  LLC-store-misses-instructions-normalize\n","Index :  37  - Column :  cpi-normalize\n","Index(['Unnamed: 0', 'time', 'cycles', 'instructions', 'branch-misses',\n","       'dTLB-load-misses', 'dTLB-store-misses', 'iTLB-load-misses',\n","       'L1-dcache-load-misses', 'L1-icache-load-misses', 'LLC-load-misses',\n","       'LLC-store-misses', 'cpi', 'Unnamed: 13', 'Unnamed: 14', 'Unnamed: 15',\n","       'Unnamed: 16', 'Unnamed: 17', 'Unnamed: 18', 'Unnamed: 19',\n","       'Unnamed: 20', 'branch-misses-instructions',\n","       'dTLB-load-misses-instructions', 'dTLB-store-misses-instructions',\n","       'iTLB-load-misses-instructions', 'L1-dcache-load-misses-instructions',\n","       'L1-icache-load-misses-instructions', 'LLC-load-misses-instructions',\n","       'LLC-store-misses-instructions', 'branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize', 'cpi-normalize'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["# Train Test Split"],"metadata":{"id":"ms0igq4Ujj7s"}},{"cell_type":"code","source":["import statsmodels.api as sm"],"metadata":{"id":"VvK9LrlnTVcl","executionInfo":{"status":"ok","timestamp":1697182430970,"user_tz":-330,"elapsed":3021,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["\n","X = df[['branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize']]\n","X = sm.add_constant(X)\n","\n","Y = df[['cpi']]\n","\n","\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, Y_train, Y_test = train_test_split(X,Y ,\n","                                   random_state=104,\n","                                   test_size=0.05,\n","                                   shuffle=True)\n","print(\"X Train : \", X_train.shape)\n","print(\"Y Train : \", Y_train.shape)\n","print(\"X Test : \", X_test.shape)\n","print(\"Y Test : \", Y_test.shape)"],"metadata":{"id":"OBuwjsD1jruj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182430970,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"8bae2d6f-a609-4c5b-81a9-004977018b02"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["X Train :  (692, 9)\n","Y Train :  (692, 1)\n","X Test :  (37, 9)\n","Y Test :  (37, 1)\n"]}]},{"cell_type":"markdown","source":["**Importing Libraries**"],"metadata":{"id":"OmozwOESnuaw"}},{"cell_type":"markdown","source":["# OLS - Linear **Regression**\n","## Splititng Code - X and Y Dataset\n","\n"],"metadata":{"id":"dHscDSPiXj9j"}},{"cell_type":"code","source":["model = sm.OLS(Y_train, X_train).fit()\n","model.summary()"],"metadata":{"id":"HWhxxYfmTe2c","colab":{"base_uri":"https://localhost:8080/","height":587},"executionInfo":{"status":"ok","timestamp":1697182431715,"user_tz":-330,"elapsed":747,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"c0946490-f692-4572-a627-3d39413861fd"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<class 'statsmodels.iolib.summary.Summary'>\n","\"\"\"\n","                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:                    cpi   R-squared:                       0.915\n","Model:                            OLS   Adj. R-squared:                  0.914\n","Method:                 Least Squares   F-statistic:                     914.3\n","Date:                Fri, 13 Oct 2023   Prob (F-statistic):               0.00\n","Time:                        07:33:50   Log-Likelihood:                 1108.4\n","No. Observations:                 692   AIC:                            -2199.\n","Df Residuals:                     683   BIC:                            -2158.\n","Df Model:                           8                                         \n","Covariance Type:            nonrobust                                         \n","================================================================================================================\n","                                                   coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------------------------------\n","const                                            0.4301      0.011     40.367      0.000       0.409       0.451\n","branch-misses-instructions-normalize             0.7529      0.013     59.217      0.000       0.728       0.778\n","dTLB-load-misses-instructions-normalize          0.3741      0.016     23.468      0.000       0.343       0.405\n","dTLB-store-misses-instructions-normalize         0.4200      0.071      5.887      0.000       0.280       0.560\n","iTLB-load-misses-instructions-normalize          0.1321      0.017      7.687      0.000       0.098       0.166\n","L1-dcache-load-misses-instructions-normalize     0.7205      0.019     37.514      0.000       0.683       0.758\n","L1-icache-load-misses-instructions-normalize     0.0874      0.022      3.935      0.000       0.044       0.131\n","LLC-load-misses-instructions-normalize           0.0982      0.020      4.960      0.000       0.059       0.137\n","LLC-store-misses-instructions-normalize         -0.0195      0.071     -0.276      0.782      -0.158       0.119\n","==============================================================================\n","Omnibus:                      228.420   Durbin-Watson:                   1.932\n","Prob(Omnibus):                  0.000   Jarque-Bera (JB):             1643.172\n","Skew:                           1.283   Prob(JB):                         0.00\n","Kurtosis:                      10.099   Cond. No.                         68.6\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\"\"\""],"text/html":["<table class=\"simpletable\">\n","<caption>OLS Regression Results</caption>\n","<tr>\n","  <th>Dep. Variable:</th>           <td>cpi</td>       <th>  R-squared:         </th> <td>   0.915</td>\n","</tr>\n","<tr>\n","  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.914</td>\n","</tr>\n","<tr>\n","  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   914.3</td>\n","</tr>\n","<tr>\n","  <th>Date:</th>             <td>Fri, 13 Oct 2023</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n","</tr>\n","<tr>\n","  <th>Time:</th>                 <td>07:33:50</td>     <th>  Log-Likelihood:    </th> <td>  1108.4</td>\n","</tr>\n","<tr>\n","  <th>No. Observations:</th>      <td>   692</td>      <th>  AIC:               </th> <td>  -2199.</td>\n","</tr>\n","<tr>\n","  <th>Df Residuals:</th>          <td>   683</td>      <th>  BIC:               </th> <td>  -2158.</td>\n","</tr>\n","<tr>\n","  <th>Df Model:</th>              <td>     8</td>      <th>                     </th>     <td> </td>   \n","</tr>\n","<tr>\n","  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","                        <td></td>                          <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n","</tr>\n","<tr>\n","  <th>const</th>                                        <td>    0.4301</td> <td>    0.011</td> <td>   40.367</td> <td> 0.000</td> <td>    0.409</td> <td>    0.451</td>\n","</tr>\n","<tr>\n","  <th>branch-misses-instructions-normalize</th>         <td>    0.7529</td> <td>    0.013</td> <td>   59.217</td> <td> 0.000</td> <td>    0.728</td> <td>    0.778</td>\n","</tr>\n","<tr>\n","  <th>dTLB-load-misses-instructions-normalize</th>      <td>    0.3741</td> <td>    0.016</td> <td>   23.468</td> <td> 0.000</td> <td>    0.343</td> <td>    0.405</td>\n","</tr>\n","<tr>\n","  <th>dTLB-store-misses-instructions-normalize</th>     <td>    0.4200</td> <td>    0.071</td> <td>    5.887</td> <td> 0.000</td> <td>    0.280</td> <td>    0.560</td>\n","</tr>\n","<tr>\n","  <th>iTLB-load-misses-instructions-normalize</th>      <td>    0.1321</td> <td>    0.017</td> <td>    7.687</td> <td> 0.000</td> <td>    0.098</td> <td>    0.166</td>\n","</tr>\n","<tr>\n","  <th>L1-dcache-load-misses-instructions-normalize</th> <td>    0.7205</td> <td>    0.019</td> <td>   37.514</td> <td> 0.000</td> <td>    0.683</td> <td>    0.758</td>\n","</tr>\n","<tr>\n","  <th>L1-icache-load-misses-instructions-normalize</th> <td>    0.0874</td> <td>    0.022</td> <td>    3.935</td> <td> 0.000</td> <td>    0.044</td> <td>    0.131</td>\n","</tr>\n","<tr>\n","  <th>LLC-load-misses-instructions-normalize</th>       <td>    0.0982</td> <td>    0.020</td> <td>    4.960</td> <td> 0.000</td> <td>    0.059</td> <td>    0.137</td>\n","</tr>\n","<tr>\n","  <th>LLC-store-misses-instructions-normalize</th>      <td>   -0.0195</td> <td>    0.071</td> <td>   -0.276</td> <td> 0.782</td> <td>   -0.158</td> <td>    0.119</td>\n","</tr>\n","</table>\n","<table class=\"simpletable\">\n","<tr>\n","  <th>Omnibus:</th>       <td>228.420</td> <th>  Durbin-Watson:     </th> <td>   1.932</td>\n","</tr>\n","<tr>\n","  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>1643.172</td>\n","</tr>\n","<tr>\n","  <th>Skew:</th>          <td> 1.283</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n","</tr>\n","<tr>\n","  <th>Kurtosis:</th>      <td>10.099</td>  <th>  Cond. No.          </th> <td>    68.6</td>\n","</tr>\n","</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."],"text/latex":"\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}                               &       cpi        & \\textbf{  R-squared:         } &     0.915   \\\\\n\\textbf{Model:}                                       &       OLS        & \\textbf{  Adj. R-squared:    } &     0.914   \\\\\n\\textbf{Method:}                                      &  Least Squares   & \\textbf{  F-statistic:       } &     914.3   \\\\\n\\textbf{Date:}                                        & Fri, 13 Oct 2023 & \\textbf{  Prob (F-statistic):} &     0.00    \\\\\n\\textbf{Time:}                                        &     07:33:50     & \\textbf{  Log-Likelihood:    } &    1108.4   \\\\\n\\textbf{No. Observations:}                            &         692      & \\textbf{  AIC:               } &    -2199.   \\\\\n\\textbf{Df Residuals:}                                &         683      & \\textbf{  BIC:               } &    -2158.   \\\\\n\\textbf{Df Model:}                                    &           8      & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}                             &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                                                      & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}                                        &       0.4301  &        0.011     &    40.367  &         0.000        &        0.409    &        0.451     \\\\\n\\textbf{branch-misses-instructions-normalize}         &       0.7529  &        0.013     &    59.217  &         0.000        &        0.728    &        0.778     \\\\\n\\textbf{dTLB-load-misses-instructions-normalize}      &       0.3741  &        0.016     &    23.468  &         0.000        &        0.343    &        0.405     \\\\\n\\textbf{dTLB-store-misses-instructions-normalize}     &       0.4200  &        0.071     &     5.887  &         0.000        &        0.280    &        0.560     \\\\\n\\textbf{iTLB-load-misses-instructions-normalize}      &       0.1321  &        0.017     &     7.687  &         0.000        &        0.098    &        0.166     \\\\\n\\textbf{L1-dcache-load-misses-instructions-normalize} &       0.7205  &        0.019     &    37.514  &         0.000        &        0.683    &        0.758     \\\\\n\\textbf{L1-icache-load-misses-instructions-normalize} &       0.0874  &        0.022     &     3.935  &         0.000        &        0.044    &        0.131     \\\\\n\\textbf{LLC-load-misses-instructions-normalize}       &       0.0982  &        0.020     &     4.960  &         0.000        &        0.059    &        0.137     \\\\\n\\textbf{LLC-store-misses-instructions-normalize}      &      -0.0195  &        0.071     &    -0.276  &         0.782        &       -0.158    &        0.119     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       & 228.420 & \\textbf{  Durbin-Watson:     } &    1.932  \\\\\n\\textbf{Prob(Omnibus):} &   0.000 & \\textbf{  Jarque-Bera (JB):  } & 1643.172  \\\\\n\\textbf{Skew:}          &   1.283 & \\textbf{  Prob(JB):          } &     0.00  \\\\\n\\textbf{Kurtosis:}      &  10.099 & \\textbf{  Cond. No.          } &     68.6  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from sklearn.linear_model import Lasso\n","regressor = Lasso(alpha=0.00000000001,positive=True,max_iter=1000000)\n","temp=regressor.fit(X_train,Y_train)\n","\n","# Printing Cofficients :\n","coeff_df = pd.DataFrame(temp.coef_, X_train.columns, columns=['Cofficient'])\n","print(coeff_df)\n","print()\n","\n","print('Linear Intercept term: ',temp.intercept_) # This gives us the intercept term\n","\n","Y_pred = regressor.predict(X_test)\n","y_pred_overall = regressor.predict(X)\n","\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from math import sqrt\n","from scipy.stats import ttest_ind\n","import numpy as np\n","\n","\n","print()\n","rmse = sqrt(mean_squared_error(Y_test, Y_pred))\n","print(\"RMSE:- \",rmse)\n","rsq = r2_score(Y_test,Y_pred) #R-Squared on the training data\n","print('R-square: ',rsq)\n","rad=1-(((1-rsq)*(len(Y)-1))/(len(Y)-1-X.shape[1]))\n","print('Adjusted R-square: ', rad)\n","F=(rsq/(1-rsq))*((len(Y)-1-X.shape[1])/X.shape[1])\n","print('F value :',F)\n","print(\"Pvalues :\",ttest_ind(X, Y).pvalue)\n","\n","\n","Y_test1 = Y_test.to_numpy().flatten()\n","print(Y_test1.shape)\n","print(Y_pred.shape)\n","res= Y_test1 - Y_pred\n","print('Sum of Residuals :', np.sum(res))\n","# print('Residuals :', res)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BPmH7m4_yE2q","executionInfo":{"status":"ok","timestamp":1697182431716,"user_tz":-330,"elapsed":8,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"927af384-1d86-4018-80fd-116046ffcbaf"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["                                              Cofficient\n","const                                           0.000000\n","branch-misses-instructions-normalize            0.753008\n","dTLB-load-misses-instructions-normalize         0.373840\n","dTLB-store-misses-instructions-normalize        0.400901\n","iTLB-load-misses-instructions-normalize         0.131638\n","L1-dcache-load-misses-instructions-normalize    0.719271\n","L1-icache-load-misses-instructions-normalize    0.087558\n","LLC-load-misses-instructions-normalize          0.098895\n","LLC-store-misses-instructions-normalize         0.000000\n","\n","Linear Intercept term:  [0.4302754]\n","\n","RMSE:-  0.04113202378399314\n","R-square:  0.9103255636206601\n","Adjusted R-square:  0.9092030741527685\n","F value : 810.9880668462295\n","Pvalues : [1.27159137e-072 1.20055875e-305 0.00000000e+000 0.00000000e+000\n"," 0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000\n"," 0.00000000e+000]\n","(37,)\n","(37,)\n","Sum of Residuals : -0.025870881359430387\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/scipy/stats/_axis_nan_policy.py:551: RuntimeWarning: Precision loss occurred in moment calculation due to catastrophic cancellation. This occurs when the data are nearly identical. Results may be unreliable.\n","  res = hypotest_fun_out(*samples, axis=axis, **kwds)\n"]}]},{"cell_type":"markdown","source":["# Plot Graph"],"metadata":{"id":"Zz-gBpwyYKmi"}},{"cell_type":"code","source":["from statsmodels.tools.eval_measures import rmse\n","\n","\n","# Trying to Plot the Stack of the Predictied Values of the model w.r.t. to the CPI\n","Y_pred = regressor.predict(X_test)\n","print(\"Y Test : \", Y_test.shape)\n","print(\"Y Prediction : \", Y_pred.shape)\n","# print(Y_test)\n","# print(Y_pred)\n","\n","\n","# Import Package\n","import matplotlib.pyplot as plt\n","\n","# Line Plot\n","x_axis = [i+1 for i in range(Y_test.shape[0])]\n","plt.style.use('default')\n","plt.title(\"CPI - Predicted vs Test\")\n","plt.ylabel(\"CPI\")\n","plt.xlabel(\"No. of Observations\")\n","\n","plt.plot(x_axis, Y_test, label = \"Test\", linestyle =  \"-\" )\n","plt.plot(x_axis, Y_pred, label = \"Prediction\", linestyle = '--')\n","plt.legend()\n","plt.show()"],"metadata":{"id":"O4N5luDBYKFr","colab":{"base_uri":"https://localhost:8080/","height":507},"executionInfo":{"status":"ok","timestamp":1697182433193,"user_tz":-330,"elapsed":1482,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"fe0938ee-f93b-44a2-bbfa-4584397d3ae8"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Y Test :  (37, 1)\n","Y Prediction :  (37,)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Computing CPI Stack"],"metadata":{"id":"1g-XYFTD_VY-"}},{"cell_type":"code","source":["cpi_stack = ['const', 'branch-misses-instructions-normalize',\n","       'dTLB-load-misses-instructions-normalize',\n","       'dTLB-store-misses-instructions-normalize',\n","       'iTLB-load-misses-instructions-normalize',\n","       'L1-dcache-load-misses-instructions-normalize',\n","       'L1-icache-load-misses-instructions-normalize',\n","       'LLC-load-misses-instructions-normalize',\n","       'LLC-store-misses-instructions-normalize']\n","\n","\n","# Printing Cofficients :\n","coeff_df = pd.DataFrame(temp.coef_, X_train.columns, columns=['Cofficient'])\n","print(coeff_df)\n","print()\n","\n","print('Linear Intercept term: ',temp.intercept_) # This gives us the intercept term\n"],"metadata":{"id":"OwLPW5lRBgZH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182433193,"user_tz":-330,"elapsed":8,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"78c6f7d4-be10-43d3-f87d-42b94f5a5bc4"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["                                              Cofficient\n","const                                           0.000000\n","branch-misses-instructions-normalize            0.753008\n","dTLB-load-misses-instructions-normalize         0.373840\n","dTLB-store-misses-instructions-normalize        0.400901\n","iTLB-load-misses-instructions-normalize         0.131638\n","L1-dcache-load-misses-instructions-normalize    0.719271\n","L1-icache-load-misses-instructions-normalize    0.087558\n","LLC-load-misses-instructions-normalize          0.098895\n","LLC-store-misses-instructions-normalize         0.000000\n","\n","Linear Intercept term:  [0.4302754]\n"]}]},{"cell_type":"code","source":["stack = []\n","# Base -\n","stack.append(temp.intercept_)\n","# Adding other parameters\n","for i in range(1, coeff_df.shape[0]) :\n","  champ = coeff_df.iloc[i, 0] * (df[cpi_stack[i]].mean())\n","  stack.append(champ)\n","\n","print(\"CPI Stack Sum : \", sum(stack) )\n","print(\"Mean of CPI : \", df['cpi'].mean())"],"metadata":{"id":"qLv26dq_CK7j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697182433193,"user_tz":-330,"elapsed":6,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"b747823e-3faf-45b0-a493-f82f8815a101"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["CPI Stack Sum :  [1.11711986]\n","Mean of CPI :  1.117084367947874\n"]}]},{"cell_type":"code","source":["cpi_stack_labels = ['const', 'branch-misses',\n","       'dTLB-load-misses',\n","       'dTLB-store-misses',\n","       'iTLB-load-misses',\n","       'L1-dcache-load-misses',\n","       'L1-icache-load-misses',\n","       'LLC-load-misses',\n","       'LLC-store-misses']\n","\n","prefix_sum = [stack[0]]\n","for i in range(1, len(stack)) :\n","  prefix_sum.append(prefix_sum[-1] + stack[i])\n","\n","# print(prefix_sum)\n","width = 0.35\n","plt.style.use('default')\n","fig, ax = plt.subplots()\n","fig.set_size_inches(8, 5)\n","for i in range(len(stack)-1, -1, -1) :\n","  ax.bar(width, prefix_sum[i], label = cpi_stack_labels[i], align='edge' )\n","  # ax.bar(width, prefix_sum[i])\n","\n","ax.set_ylabel(\"CPI\", fontweight='bold')\n","ax.set_title(\"CPI Stack\", fontweight='bold')\n","plt.legend(bbox_to_anchor=(0.3, 1.0), borderpad=2)\n","legend_properties = {'weight':'normal'}\n","plt.legend(prop=legend_properties)\n","\n","\n","plt.tick_params(\n","axis='x', # changes apply to the x-axis\n","which='both', # both major and minor ticks are affected\n","bottom=True, # ticks along the bottom edge are off\n","top=True, # ticks along the top edge are off\n","labelbottom=False) # labels along the bottom edge are off\n","\n","images_dir = \"/content/drive/MyDrive/Problem_2/cpi\"\n","\n","plt.savefig(f\"{images_dir}/mcf_LR.jpeg\")\n","plt.show()\n","\n","\n","\n"],"metadata":{"id":"O3ye_ncaG01e","colab":{"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"status":"ok","timestamp":1697182435747,"user_tz":-330,"elapsed":2559,"user":{"displayName":"Naman Malpani","userId":"03467115516653023208"}},"outputId":"73ba9ede-27a7-403f-fecf-d8ea74997498"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"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KVIkS2O1bt2aCxcuMHToUM6ePUuFChVYvXq18aGwuLi4dGtovLy8+P777+nbty/ly5fHw8OD3r17884772T3NERERETkGZCtZQbm5uZZ+gawu3fvPnZhT4uWGYiIyJOiZQbyPPmvLjPI1W8AExERERF5HNkKs9l5klFERORZd/8Gj270iGTfk/p7k60w26FDBzZt2kTJkiUJCQlJd2zr1q0cPnyYGjVqPJHCRERE/utu375Namoqd+7cyfAbsUQkcykpKQCZfotrVmUrzI4bN445c+bw008/PXDsxo0bdOrUiS5duhAbG/tYRYmIiJiCu3fvcvLkSeN7zq2srB75bImIqbp169YTG8tgMHDhwgXy5cv32OvNs9V7/fr12NvbU7169QeO1a1b1/gtHyIiIs+Lw4cPA1C0aNHHvsMk8l+WnJz8RMczNzenSJEij/0PwGyF2VOnTlG8ePFMj3t5eXHo0KHHKkhERMTUHD58mGPHjmFtba07s/LM6tmz5xMdL0+ePE/ka4yzFWYtLS05efIkBoPhgclTU1M5ceKE1gyJiMhzKTU19YnfuRL5L/nn67P+K7IVh/39/bl27RqDBw9+4NiQIUNISkrC39//iRUnIiIiIvIw2boz26pVK7Zv38748eP5/vvvCQsLw8zMjM2bN7Nnzx7MzMxo3br106pVRERERCSdbIXZHj16sGjRIvbu3cu+ffvYt2+f8VhaWhqBgYH06NHjiRcpIiIiIpKRbC0zyJs3L+vWraNNmzZYWFiQlpZGWloaFhYWtG3bljVr1hhfTyIiIiIi8rRl+8Vejo6OfPLJJ8yaNYtDhw6RlpZGyZIlH/m9uSIiIiIiT9q/fkutvb09lStXfpK1iIiIiIhky+O/3EtEREREJJcozIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZOlMCsiIiIiJkthVkRERERMlsKsiIiIiJgshVkRERERMVkKsyIiIiJishRmRURERMRkKcyKiIiIiMlSmBURERERk6UwKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGQpzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZNlmdsFPA/CaizM7RJEREREHtPw3C4gQ7ozKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGT9J8LsjBkz8Pb2xtrampCQELZv356lfosXL8bMzIymTZs+3QJFRERE5D8p18PskiVLiIyMZNiwYezevZuAgAAaNGjA+fPnH9rvxIkT9OvXj7CwsByqVERERET+a3I9zMbExNClSxc6depE6dKliY2NJV++fMybNy/TPqmpqbRr144RI0ZQrFixh45/+/ZtkpKS0v2IiIiIyLMhV8NsSkoKu3btIjw83LjP3Nyc8PBwtm7dmmm/kSNH4uLiwuuvv/7IOaKionBwcDD+eHl5PZHaRURERCT35WqYvXjxIqmpqbi6uqbb7+rqytmzZzPss3nzZj788EPmzJmTpTkGDhxIYmKi8Sc+Pv6x6xYRERGR/wbL3C4gO65du0b79u2ZM2cOTk5OWeqTN29e8ubN+5QrExEREZHckKth1snJCQsLC86dO5du/7lz53Bzc3ug/dGjRzlx4gSNGzc27jMYDABYWlry559/4uvr+3SLFhEREZH/jFxdZpAnTx4qVarE2rVrjfsMBgNr164lNDT0gfalSpXit99+Y+/evcaf//3vf9SuXZu9e/dqPayIiIjIcybXlxlERkYSERFB5cqVCQ4OZvLkySQnJ9OpUycAOnTogIeHB1FRUVhbW1O2bNl0/R0dHQEe2C8iIiIiz75cD7OtW7fmwoULDB06lLNnz1KhQgVWr15tfCgsLi4Oc/Ncf4OYiIiIiPwHmaWlpaXldhE5KSkpCQcHBxITE7G3t8+ROdeu0zpeERERMW116xzNsbmyk9d0y1NERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZOlMCsiIiIiJkthVkRERERMlsKsiIiIiJgshVkRERERMVkKsyIiIiJishRmRURERMRkKcyKiIiIiMlSmBURERERk6UwKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGQpzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZOlMCsiIiIiJkthVkRERERMlsKsiIiIiJgshVkRERERMVkKsyIiIiJishRmRURERMRkKcyKiIiIiMlSmBURERERk6UwKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGQpzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJ+k+E2RkzZuDt7Y21tTUhISFs374907Zz5swhLCyMAgUKUKBAAcLDwx/aXkRERESeXbkeZpcsWUJkZCTDhg1j9+7dBAQE0KBBA86fP59h+w0bNtCmTRvWr1/P1q1b8fLyon79+iQkJORw5SIiIiKS28zS0tLScrOAkJAQgoKCmD59OgAGgwEvLy969erFu++++8j+qampFChQgOnTp9OhQ4dHtk9KSsLBwYHExETs7e0fu/6sWLvON0fmEREREXla6tY5mmNzZSev5eqd2ZSUFHbt2kV4eLhxn7m5OeHh4WzdujVLY9y4cYM7d+5QsGDBDI/fvn2bpKSkdD8iIiIi8mzI1TB78eJFUlNTcXV1Tbff1dWVs2fPZmmMd955B3d393SB+O+ioqJwcHAw/nh5eT123SIiIiLy35Dra2Yfx9ixY1m8eDFffvkl1tbWGbYZOHAgiYmJxp/4+PgcrlJEREREnhbL3JzcyckJCwsLzp07l27/uXPncHNze2jfiRMnMnbsWNasWUP58uUzbZc3b17y5s37ROoVERERkf+WXL0zmydPHipVqsTatWuN+wwGA2vXriU0NDTTfuPHj+f9999n9erVVK5cOSdKFREREZH/oFy9MwsQGRlJREQElStXJjg4mMmTJ5OcnEynTp0A6NChAx4eHkRFRQEwbtw4hg4dyqeffoq3t7dxba2trS22tra5dh4iIiIikvNyPcy2bt2aCxcuMHToUM6ePUuFChVYvXq18aGwuLg4zM3//wbyrFmzSElJoUWLFunGGTZsGMOHD8/J0kVEREQkl+X6e2Zzmt4zKyIiIpJ9es+siIiIiMgTpjArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZOlMCsiIiIiJkthVkRERERMlsKsiIiIiJgshVkRERERMVkKsyIiIiJishRmRURERMRkKcyKiIiIiMlSmBURERERk6UwKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGQpzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZOlMCsiIiIiJkthVkRERERMlsKsiIiIiJgshVkRERERMVkKsyIiIiJishRmRURERMRkKcyKiIiIiMlSmBURERERk6UwKyIiIiImS2FWREREREyWwqyIiIiImCyFWRERERExWQqzIiIiImKyFGZFRERExGQpzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZP0nwuyMGTPw9vbG2tqakJAQtm/f/tD2S5cupVSpUlhbW1OuXDlWrlyZQ5WKiIiIyH9JrofZJUuWEBkZybBhw9i9ezcBAQE0aNCA8+fPZ9h+y5YttGnThtdff509e/bQtGlTmjZtyv79+3O4chERERHJbWZpaWlpuVlASEgIQUFBTJ8+HQCDwYCXlxe9evXi3XfffaB969atSU5O5rvvvjPuq1KlChUqVCA2NvaR8yUlJeHg4EBiYiL29vZP7kQeYu063xyZR0RERORpqVvnaI7NlZ28ZplDNWUoJSWFXbt2MXDgQOM+c3NzwsPD2bp1a4Z9tm7dSmRkZLp9DRo04Kuvvsqw/e3bt7l9+7ZxOzExEbh3kXJKcrIhx+YSEREReRpyMjvdnysr91xzNcxevHiR1NRUXF1d0+13dXXl4MGDGfY5e/Zshu3Pnj2bYfuoqChGjBjxwH4vL69/WbWIiIjI88ghx2e8du0aDg4PnzdXw2xOGDhwYLo7uQaDgcuXL1OoUCHMzMxysbLckZSUhJeXF/Hx8Tm2zMIU6LpkTtcmY7oumdO1yZiuS8Z0XTL3PF+btLQ0rl27hru7+yPb5mqYdXJywsLCgnPnzqXbf+7cOdzc3DLs4+bmlq32efPmJW/evOn2OTo6/vuinxH29vbP3V+MrNB1yZyuTcZ0XTKna5MxXZeM6bpk7nm9No+6I3tfrr7NIE+ePFSqVIm1a9ca9xkMBtauXUtoaGiGfUJDQ9O1B/jxxx8zbS8iIiIiz65cX2YQGRlJREQElStXJjg4mMmTJ5OcnEynTp0A6NChAx4eHkRFRQHQu3dvatasSXR0NI0aNWLx4sXs3LmTDz74IDdPQ0RERERyQa6H2datW3PhwgWGDh3K2bNnqVChAqtXrzY+5BUXF4e5+f/fQK5atSqffvop7733HoMGDcLPz4+vvvqKsmXL5tYpmJS8efMybNiwB5ZePO90XTKna5MxXZfM6dpkTNclY7oumdO1yZpcf8+siIiIiMi/levfACYiIiIi8m8pzIqIiIiIyVKYFRERERGTpTArIiIiIiZLYVZERERETJbCrIiIiIiYLIVZERERETFZCrMiIiIiYrIUZkVERETEZCnMioiIiIjJUpgVEREREZP1f6qqqsJGvt4pAAAAAElFTkSuQmCC\n"},"metadata":{}}]}]}